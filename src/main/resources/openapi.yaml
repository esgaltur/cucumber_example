openapi: 3.0.1
info:
  title: Order API
  description: A sample API for managing orders with JWT security.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local server

paths:
  /order/{id}:
    get:
      summary: Get an Order by ID
      description: Fetches an order by its unique identifier.
      tags:
        - Orders
      operationId: getOrderById
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the order to retrieve
          schema:
            type: integer
            example: 101
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved the order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Invalid Order ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'

    put:
      summary: Update an existing order by ID
      description: Updates the details of an order.
      tags:
        - Orders
      operationId: updateOrder
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the order to update
          schema:
            type: integer
            example: 101
      requestBody:
        description: The updated order information (including ID)
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUpdateRequest'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully updated the order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'

    delete:
      summary: Delete an Order by ID
      description: Deletes an existing order by its ID.
      tags:
        - Orders
      operationId: deleteOrderById
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the order to delete
          schema:
            type: integer
            example: 101
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Successfully deleted the order
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'

  /order:
    post:
      summary: Create a new Order
      description: Creates a new order and returns the newly created order with the generated ID.
      tags:
        - Orders
      operationId: createOrder
      requestBody:
        description: The order details (including ID if specified)
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreateRequest'
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Successfully created a new order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Order:
      type: object
      description: The base structure for an order
      properties:
        id:
          type: integer
          description: The unique identifier of the order
          example: 1
        item:
          type: string
          description: The name of the item ordered
          example: "Laptop"
        quantity:
          type: integer
          description: The quantity of the item ordered
          example: 2
        price:
          type: number
          format: float
          description: The price of the item
          example: 1000.50
        status:
          type: string
          description: The current status of the order
          enum:
            - NEW
            - SHIPPED
            - DELIVERED
            - CANCELLED
          example: "NEW"
    OrderCreateRequest:
      allOf:
        - $ref: '#/components/schemas/Order'
      description: Schema for creating a new order (ID may be auto-generated or provided)

    OrderUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/Order'
      description: Schema for updating an existing order (must include ID)

    OrderResponse:
      allOf:
        - $ref: '#/components/schemas/Order'

    ApiErrorResponse:
      type: object
      description: Custom error response object
      properties:
        code:
          type: integer
          description: The HTTP status code
          example: 404
        message:
          type: string
          description: A human-readable message providing details about the error
          example: "Order not found."
        details:
          type: string
          description: Additional information about the error
          example: "No order with the given ID exists in the system."
        timestamp:
          type: string
          format: date-time
          description: timestamp
          example: "2021-02-03 20:30:31"
